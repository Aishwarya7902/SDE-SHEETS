problem: https://practice.geeksforgeeks.org/problems/rat-in-a-maze-problem/1#
video: 1.striver bhaiya:      https://youtu.be/bLGZhJlt4y0
       2.love babbar bhaiya:  https://youtu.be/wjqSZy4pMT4
       3.aman dhattarwal:
/*
tc: O(4^n*n)  // 4 raised to the power n square
sc: O(n*n) // for visited array

*/


class Solution{
    public:
    vector<string>ans;
    bool isSafe(int x,int y,vector<vector<int>> &arr, int n,vector<vector<int>>&vis){
        if((x>=0 && x<n) && (y>=0 && y<n) && arr[x][y]==1 && vis[x][y]!=1){
            return true;
        }
        return false;
    }
    void solve(int x,int y,vector<vector<int>> &arr, int n,vector<vector<int>>&vis,string path){
        if(x==n-1 && y==n-1){
            ans.push_back(path);
            return;
        }
        //down
        if(isSafe(x+1,y,arr,n,vis)){
            vis[x][y]=1;
            solve(x+1,y,arr,n,vis,path+'D');
            vis[x][y]=0;
        }
        //left
        if(isSafe(x,y-1,arr,n,vis)){
            vis[x][y]=1;
            solve(x,y-1,arr,n,vis,path+'L');
            vis[x][y]=0;
        }
        //right
        if(isSafe(x,y+1,arr,n,vis)){
            vis[x][y]=1;
            solve(x,y+1,arr,n,vis,path+'R');
            vis[x][y]=0;
        }
        //up
        if(isSafe(x-1,y,arr,n,vis)){
            vis[x][y]=1;
            solve(x-1,y,arr,n,vis,path+'U');
            vis[x][y]=0;
        }
    }
    vector<string> findPath(vector<vector<int>> &arr, int n) {
        ans.clear();
        if(arr[0][0]==0 || arr[n-1][n-1]==0)return ans;
        // Your code goes here
        
        vector<vector<int>>vis(n,vector<int>(n,0));
        string path="";
        solve(0,0,arr,n,vis,path);
        
        
        return ans;
    }
};

/* IMPROVED CODE BY REDUCING NO OF LINES
 VIDEO LINK: https://youtu.be/bLGZhJlt4y0
 */

class Solution{
    public:
    void solve(int i,int j,vector<vector<int>>&m,int n,vector<string>&ans,vector<vector<int>>&vis,string path,int di[],int dj[]){
        if(i==n-1 && j==n-1){
            ans.push_back(path);
            return;
        }
        string dir="DLRU";
        for(int ind=0;ind<4;ind++){
            int nexti=i+di[ind];
            int nextj=j+dj[ind];
            if(nexti>=0 && nextj>=0 && nexti<n && nextj<n && !vis[nexti][nextj] && m[nexti][nextj]==1){
                vis[i][j]=1;
                solve(nexti,nextj,m,n,ans,vis,path+dir[ind],di,dj);
                vis[i][j]=0;
            }
        }
    }
    vector<string> findPath(vector<vector<int>> &m, int n) {
        // Your code goes here
        vector<string>ans;
        vector<vector<int>>vis(n,vector<int>(n,0));
        string path="";
        int di[]={+1,0,0,-1};
        int dj[]={0,-1,+1,0};
        
        
        if(m[0][0]==1)solve(0,0,m,n,ans,vis,path,di,dj);
        return ans;
        
    }
        
        
};
